
import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

//This file is automatically generated. DO NOT EDIT, all your changes would be lost.

class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
      const GeneratedLocalizationsDelegate();

  static S of(BuildContext context) =>
      Localizations.of<S>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get app_title => "Palazzoli";
  String get catalog_code => "Code";
  String get catalog_product_download => "DOWNLOAD";
  String get catalog_product_personal_data => "PERSONAL DATA";
  String get catalog_product_statement => "STATEMENT";
  String get catalog_product_technical_data => "TECHNICAL DATA";
  String get error_email_invalid => "Email is not valid";
  String get error_email_not_the_same => "Email is not the same";
  String get error_field_empty => "Field is required";
  String get error_no_network => "No Internet Connection";
  String get error_unexpected => "Unexpected error occurred";
  String get general_close => "Close";
  String get general_loading => "Loading...";
  String get general_ok => "Ok";
  String get general_send => "SEND";
  String get general_try_again => "TRY AGAIN!";
  String get home_catalog => "Catalogue lighting on line";
  String get home_check_out_products => "";
  String get home_nav_bottom_catalog => "Catalogue";
  String get home_nav_bottom_fav => "Favourites";
  String get home_nav_bottom_home => "Home";
  String get home_nav_bottom_info => "Info";
  String get info_hint_confirm_email => "Confirm email*";
  String get info_hint_email => "Email*";
  String get info_hint_message => "Message";
  String get info_hint_phone => "Phone*";
  String get info_hint_surname => "Surname*";
  String get info_information => "Information";
  String get info_label_name => "Name*";
  String get info_mail_send => "Message was sent successfully";
  String get info_price_quotation => "Price quotation";
  String get register_businessName => "Business Name";
  String get register_button => "SEND";
  String get register_common => "Common";
  String get register_done => "Successfully sent";
  String get register_email => "Email";
  String get register_latter => "Send later";
  String get register_name => "First Name";
  String get register_nation => "Nation";
  String get register_phone => "Phone";
  String get register_privacy => "I consent to the processing of personal data for the exclusive use of ";
  String get register_privacy_required => "You must accept the privacy conditions.";
  String get register_privacy_underline => "Palazzoli S.p.A.";
  String get register_province => "Province";
  String get register_selectActivity => "Select Activity";
  String get register_surname => "Last Name";
  String get searchFieldLabel => "My search field";
}

class en extends S {
  const en();
}

class it extends S {
  const it();

   @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get error_email_not_the_same => "L'email non è la stessa";
  @override
  String get register_surname => "Cognome";
  @override
  String get register_name => "Nome";
  @override
  String get register_phone => "Telefono";
  @override
  String get home_nav_bottom_home => "Casa";
  @override
  String get register_common => "Comune";
  @override
  String get general_try_again => "TRY AGAIN!";
  @override
  String get home_nav_bottom_catalog => "Catalogo";
  @override
  String get home_check_out_products => "";
  @override
  String get error_unexpected => "Unexpected error occurred";
  @override
  String get register_province => "Provincia";
  @override
  String get register_privacy_required => "Devi accettare le condizioni sulla privacy.";
  @override
  String get catalog_product_technical_data => "DATI TECNICI";
  @override
  String get info_hint_message => "Messaggio";
  @override
  String get searchFieldLabel => "My search field";
  @override
  String get info_information => "Informazione";
  @override
  String get catalog_product_personal_data => "ANAGRAFICA";
  @override
  String get info_price_quotation => "Preventivo";
  @override
  String get register_selectActivity => "Seleziona Attività";
  @override
  String get general_close => "Chiudi";
  @override
  String get catalog_code => "Codice";
  @override
  String get register_privacy => "Acconsento al trattamento dei dati personali ad uso esclusivo di ";
  @override
  String get register_businessName => "Regione Sociale";
  @override
  String get info_hint_surname => "Cognome*";
  @override
  String get info_hint_confirm_email => "Conferma email*";
  @override
  String get register_latter => "Invia più tardi";
  @override
  String get catalog_product_download => "DOWNLOAD";
  @override
  String get app_title => "Palazzoli";
  @override
  String get register_nation => "Nazione";
  @override
  String get general_ok => "Ok";
  @override
  String get info_mail_send => "Messaggio inviato con successo";
  @override
  String get info_hint_email => "E-mail*";
  @override
  String get register_button => "INVIA";
  @override
  String get error_email_invalid => "L'email non è valida";
  @override
  String get home_nav_bottom_fav => "Preferiti";
  @override
  String get home_catalog => "Catalogo lighting on line";
  @override
  String get home_nav_bottom_info => "Info";
  @override
  String get general_loading => "Loading...";
  @override
  String get info_label_name => "Nome*";
  @override
  String get error_field_empty => "Il campo è obbligatiorio";
  @override
  String get register_email => "Email";
  @override
  String get error_no_network => "No Internet Connection";
  @override
  String get catalog_product_statement => "NORMATIVA";
  @override
  String get register_done => "Inviato con successo";
  @override
  String get general_send => "INVIA";
  @override
  String get info_hint_phone => "Telefono*";
  @override
  String get register_privacy_underline => "Palazzoli S.p.A.";
}


class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[

      const Locale("en", ""),
      const Locale("it", ""),

    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      final Locale languageLocale = new Locale(locale.languageCode, "");
      if (supported.contains(locale))
        return locale;
      else if (supported.contains(languageLocale))
        return languageLocale;
      else {
        final Locale fallbackLocale = fallback ?? supported.first;
        return fallbackLocale;
      }
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    final String lang = getLang(locale);
    switch (lang) {

      case "en":
        return new SynchronousFuture<WidgetsLocalizations>(const en());
      case "it":
        return new SynchronousFuture<WidgetsLocalizations>(const it());

      default:
        return new SynchronousFuture<WidgetsLocalizations>(const S());
    }
  }

  @override
  bool isSupported(Locale locale) => supportedLocales.contains(locale);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;
}

String getLang(Locale l) => l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
